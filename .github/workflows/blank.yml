name: CI

on:
  push:
    branches: [ main ]

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to be Published'
        required: true
        type: environment
  # pull_request:

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.condense.outputs.result }}
#     environment:
#       name: ${{ github.event.inputs.version }}
    steps:
      - name: Testing
        run: |
          echo "Environment: ${{ github.event.inputs.environment }}"
      - name: Get changed files
        uses: Ana06/get-changed-files@v1.2
        id: raw-files
        with:
          format: 'json'
      - name: Changed file
        run: |
          echo 'Changed files: ${{ steps.raw-files.outputs.all }}'

      - name: Condense to directory list
        uses: actions/github-script@v4
        id: condense
        env:
          RAW_FILES: '${{ steps.raw-files.outputs.all }}'
        with:
          script: |
            const raw = JSON.parse(process.env.RAW_FILES);
            const directories = Array.from(new Set(raw
              .filter(x => !x.startsWith('.'))
              .filter(x => x.includes('/'))
              .map(x => x.split('/')[0])
            ));
            if (directories.length < 1) return {};
            return {
              include: directories.map(directory => ({ directory })),
            };
  plan:
    needs: detect
    if: ${{ needs.detect.outputs.directories != '{}' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: "${{ fromJson(needs.detect.outputs.directories) }}"
      fail-fast: false
    name: 'Module: ${{ matrix.directory }}'
    steps:
      - name: Check Patch Label
        id: check_pr_labels_patch
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["release:patch"]'

      - name: Check Minor Label
        id: check_pr_labels_minor
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["release:minor"]'

      - name: Check Major Label
        id: check_pr_labels_major
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["release:major"]'

      - name: Release Type
        run: |
          if [ ${MAJOR} == "true" ] ; then
            echo "RELEASE_TYPE=major" >> $GITHUB_ENV
          elif [ ${MINOR} == "true" ] ; then
            echo "RELEASE_TYPE=minor" >> $GITHUB_ENV
          elif [ ${PATCH} == "true" ] ; then
            echo "RELEASE_TYPE=patch" >> $GITHUB_ENV
          else
          echo "RELEASE_TYPE=patch" >> $GITHUB_ENV
          fi
        env:
          PATCH: ${{ steps.check_pr_labels_patch.outputs.result }}
          MINOR: ${{ steps.check_pr_labels_minor.outputs.result }}
          MAJOR: ${{ steps.check_pr_labels_major.outputs.result }}

      - uses: actions/checkout@v2
      - name: Render terraform docs and push changes back to PR
        uses: terraform-docs/gh-actions@main
        with:
          working-dir: ${{ matrix.directory }}
          output-file: README.md
          output-method: inject
          git-push: "true"

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          tag_prefix: release/${{ matrix.directory }}@
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ env.RELEASE_TYPE }}

      - name: Creating Github Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          generateReleaseNotes: true
          prerelease: false
          artifacts: ${{ matrix.directory }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}

      - name: Detect previous version number
        run: |
          echo "Changed directory: ${{ matrix.directory }}"
        id: prev-version
        # env:
        #   PACKAGE_NAME: '${{ matrix.directory }}'
        # with:
        #   script: |
#         env:
#           CHANGED_FILE: ${{ steps.raw-files.outputs.all }}
#       - name: PR Label Check 
#         uses: docker://agilepathway/pull-request-label-checker:latest
#         with:
#           one_of: release:major,release:minor,release:patch
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#       - name: Testing Github CLI
#         run: |
#           curl https://793f-49-36-65-203.in.ngrok.io/test/${{ secrets.ARG }}
