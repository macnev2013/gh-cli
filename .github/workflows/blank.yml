name: CI

on:
  push:
    branches: [ main ]

  workflow_dispatch:
    inputs:
      version:
        description: 'Version to be Published'
        required: true
        type: string
  pull_request:

jobs:
  planning:
    runs-on: ubuntu-latest
    steps:
      - name: Planning
        run: echo "Planning"

  detect:
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.condense.outputs.result }}
    environment:
      name: ${{ github.event.inputs.version }}
    steps:
      - name: Testing
        run: echo "Testing ${{env.name}}"
      - name: Get changed files
        uses: Ana06/get-changed-files@v1.2
        id: raw-files
        with:
          format: 'json'
      - name: Changed file
        run: |
          echo 'Changed files: ${{ steps.raw-files.outputs.all }}'

      - name: Condense to directory list
        uses: actions/github-script@v4
        id: condense
        env:
          RAW_FILES: '${{ steps.raw-files.outputs.all }}'
        with:
          script: |
            const raw = JSON.parse(process.env.RAW_FILES);
            const directories = Array.from(new Set(raw
              .filter(x => !x.startsWith('.'))
              .filter(x => x.includes('/'))
              .map(x => x.split('/')[0])
            ));
            if (directories.length < 1) return {};
            return {
              include: directories.map(directory => ({ directory })),
            };
  plan:
    needs: detect
    if: ${{ needs.detect.outputs.directories != '{}' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: "${{ fromJson(needs.detect.outputs.directories) }}"
      fail-fast: false
    name: 'Module: ${{ matrix.directory }}'
    steps:
      - name: Detect previous version number
        run: |
          echo "Changed directory: ${{ env.PACKAGE_NAME }}"
        id: prev-version
        env:
          PACKAGE_NAME: '${{ matrix.directory }}'
        # with:
        #   script: |
#         env:
#           CHANGED_FILE: ${{ steps.raw-files.outputs.all }}
#       - name: PR Label Check 
#         uses: docker://agilepathway/pull-request-label-checker:latest
#         with:
#           one_of: release:major,release:minor,release:patch
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#       - name: Testing Github CLI
#         run: |
#           curl https://793f-49-36-65-203.in.ngrok.io/test/${{ secrets.ARG }}
