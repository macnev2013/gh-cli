name: TF ENV

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to be Published'
        required: true
        type: environment
      action:
        description: 'Action to Perform'
        required: true
        type: choice
        options:
        - create
        - destroy
      service:
        description: 'Service to be deployed'
        required: true
        type: choice
        options:
        - mysql
        - redis

jobs:
  detect:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - name: Testing
        run: |
          echo "Testing for: ${{ github.event.inputs.environment }}"
          echo "VAR_REGION=`echo ${{ github.event.inputs.environment }} | awk -F'_' '{print $(NF-1)}'`" >> $GITHUB_ENV
          echo "VAR_ENV=`echo ${{ github.event.inputs.environment }} | awk -F'_' '{print $NF}'`" >> $GITHUB_ENV
          echo "VAR_SERVICE=${{ github.event.inputs.service }}" >> $GITHUB_ENV

      - name: Service & Env
        run: |
          echo "Region: ${{ env.VAR_REGION }}"
          echo "Env: ${{ env.VAR_ENV }}"
          echo "Service: ${{ env.VAR_SERVICE }}"
          echo "Directory: ${{ env.VAR_REGION }}/${{ env.VAR_ENV }}/${{ env.VAR_SERVICE }}"
          echo "VAR_DIR=${{ env.VAR_REGION }}/${{ env.VAR_ENV }}/${{ env.VAR_SERVICE }}" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      # - name: Move Dir
      #   run: |
      #     cd ${{ env.VAR_DIR }}

      - name: MySQL Deployment
        id: plan
        if: github.event.inputs.service == 'mysql'
        working-directory: ${{ env.VAR_DIR }}
        run: |
          if [ ${{ github.event.inputs.service }} == "create" ] ; then
            echo "Creating mysql"
          if [ ${{ github.event.inputs.service }} == "destroy" ] ; then
            echo "Destroying mysql"
          else
            echo "No actions are prefomed"
          fi
          echo "Deploying MySQL"
          pwd

      - name: Redis Deployment
        if: github.event.inputs.service == 'redis'
        id: plan1
        working-directory: ${{ env.VAR_DIR }}
        run: |
          echo "Deploying Redis"
          pwd

      - name: print output
        run: echo ${{ steps.plan.outputs.stdout }}

  # plan:
  #   runs-on: ubuntu-latest
  #   needs: detect
  #   environment:
  #     name: ${{ github.event.inputs.environment }}
  #   steps:
  #     - name: Environments
  #       run: |
  #         echo "Region: ${{ env.VAR_REGION }}"
  #         echo "Env: ${{ env.VAR_ENV }}"
  #         echo "Service: ${{ env.VAR_SERVICE }}"
  #         echo "Directory: ${{ env.VAR_DIR }}"